# GitHub Actions Workflow generated with Ghygen
# Original configuration: https://ghygen.hi-folks.dev?code=c6dc03a17ad327b5c171b46ac7abda36
name: Test

on: [ push ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    env:
      DB_DATABASE: ${{ secrets.DB_DATABASE }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      SESSION_DRIVER: redis
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: redis

    services:
      # Set up the Redis service (if you need it)
      redis:
        image: redis
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        operating-system: [ ubuntu-latest ]
        php-versions: [ '8.4', '8.3', '8.2' ]
        dependency-stability: [ prefer-stable ]

        laravel: [ '11.*' ]
        include:
          - laravel: 11.*
            testbench: 9.*

    name: P${{ matrix.php-versions }} - L${{ matrix.laravel }} - ${{ matrix.dependency-stability }} - ${{ matrix.operating-system}}

    steps:
      - uses: actions/checkout@v4

      - name: Set up MySQL
        run: |
          sudo systemctl start mysql
          mysql --user="root" --password="${{ secrets.DB_PASSWORD }}" -e "CREATE DATABASE \`${{ secrets.DB_DATABASE }}\` character set UTF8mb4 collate utf8mb4_bin;"

      - name: Install PHP versions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}

      - name: Get Composer Cache Directory 2
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v4
        id: actions-cache
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Cache PHP dependencies
        uses: actions/cache@v4
        id: vendor-cache
        with:
          path: vendor
          key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.testing', '.env');"

      - name: Install Laravel Dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.dependency-stability }} --prefer-dist --no-interaction --no-suggest

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Run Migrations
        # Set environment
        env:
          SESSION_DRIVER: array
        run: php artisan migrate

      # Build assets. This could vary for your setup.
      - name: Build assets
        run: yarn && yarn build

      - name: Show Laravel versions
        run: php artisan --version

      - name: Execute tests (Unit and Feature tests) via Pest
        # Set environment
        env:
          SESSION_DRIVER: array
        run: php artisan test -p